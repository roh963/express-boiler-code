name: CI/CD Pipeline

on:
  push:
    branches: [main, feature/mongo-crud-auth]
  pull_request:
    branches: [main, feature/mongo-crud-auth]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier check
        run: npm run format:check

      - name: Run TypeScript check
        run: npm run type-check

      - name: Run tests
        run: npm run test:ci
        env:
          NODE_ENV: test
          JWT_SECRET: test-secret-key

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

      - name: Comment coverage report
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const path = './coverage/coverage-summary.json';

            if (fs.existsSync(path)) {
              const coverage = JSON.parse(fs.readFileSync(path, 'utf8'));
              const total = coverage.total;
              
              const comment = `## Test Coverage Report üìä
              
              | Type | Coverage |
              |------|----------|
              | Lines | ${total.lines.pct}% |
              | Functions | ${total.functions.pct}% |
              | Branches | ${total.branches.pct}% |
              | Statements | ${total.statements.pct}% |
              
              ${total.lines.pct >= 70 ? '‚úÖ' : '‚ùå'} Coverage threshold: 70%
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: dist/
